research_task:
  description: >
    Conduct a web search about {topic}.
    Make sure you find recent, interesting and relevant information given
    the current timestamp is {timestamp}.
  expected_output: >
    One paragraph summary of what {topic} is about.
    10 bullet points with relevant title, link and snippet 
  agent: researcher

image_search_task:
  description: >
    Search for relevant images related to {topic}.
  expected_output: >
    A list of 10 relevant image URLs with the following details for each:
    - title: The title of the image
    - imageUrl: URL link to the full-size image
    - imageWidth: Width of the full-size image in pixels
    - imageHeight: Height of the full-size image in pixels
    - thumbnailUrl: URL link to the thumbnail version of the image
    - thumbnailWidth: Width of the thumbnail image in pixels
    - thumbnailHeight: Height of the thumbnail image in pixels
    - source: Source website of the image
  agent: researcher
  context: [research_task]

image_analysis:
  description: >
  Analyze image URLs you receive as a batch.
  Provde a detailed descriptions of each image.
  expected_output: >
    A detailed analysis of each image including:
    - Image source
    - Description of visual content
    - URL
    - Relevance to {topic}
  agent: reporting_analyst
  context: [image_search_task]

image_download_task:
  description: >
    Batch download and store 3-4 relevant images found in the image analysis task.
    Return file path of each image
    Include detailed image description.
  expected_output: >
    A list of 3-4 successfully downloaded images with:
    - Image Path: The local file path where the image is saved
    - Description: A detailed description of the image content
  agent: researcher
  context: [image_analysis, research_task]

push_image_to_blob:
  description: >
    Upload downloaded images to blob storage
    Return the stored image URI and the image description
  expected_output: >
    A list of successfully uploaded images with:
    - Local filepath
    - if blob_url:
                return f"File uploaded successfully to: blob_URL"
    - Detailed image description
  agent: reporting_analyst
  context: [image_download_task]

scrape_website_task:
  description: >
    Batch scrape content URLs found in the research task.
    Extract their content for further analysis.
  expected_output: >
    A list of URLs and their scraped content, including:
    - URL
    - Content summary
  agent: reporting_analyst
  context: [research_task]

reporting_task:
  description: >
    Review the context you got and expand each topic into a full section for a report.
    Make sure the report is detailed and contains any and all relevant information.
    Integrate imagery for storytelling.
  expected_output: >
    A fully fledge report with all main fields, each with a full section of information.
    Formatted as expected. Example of embedding an image in Markdown:
    ```markdown
    ![Surya Laser Weapon](https://example.com/surya_laser_weapon.jpg "Surya Laser Weapon")
    ```
  agent: reporting_analyst
  output_file: report.json
  context: [research_task, scrape_website_task, push_image_to_blob]